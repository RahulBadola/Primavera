'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace PM6DBServiceController
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PM6DBServiceControllerSoap", [Namespace]:="http://projectobjects.com/")>  _
    Partial Public Class PM6DBServiceController
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private UpdateProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateProjectAssociationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteAllIntegrationAPIUsessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisplayStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReplacePM6StartProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAssociateProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPM6AssociateProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPM6AssociateProjectExceptCurrentProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSigepProjectInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSigepProjectStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserPrimaveraPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProjStatusListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProjLocationsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDefaultP6calendarListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProjCustomersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProjectsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProjectSanpshotsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CompanyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean

        '''<remarks/>
        Public Sub New(url As String)
            MyBase.New
            Me.Url = url 'Global.SigepPrimavera.My.MySettings.Default.SigepPrimavera_PM6DBServiceController_PM6DBServiceController
            If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
                Me.UseDefaultCredentials = True
                Me.useDefaultCredentialsSetExplicitly = False
            Else
                Me.useDefaultCredentialsSetExplicitly = True
            End If
        End Sub

        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event UpdateProjectCompleted As UpdateProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateProjectAssociationCompleted As UpdateProjectAssociationCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportProjectCompleted As ImportProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteAllIntegrationAPIUsessionCompleted As DeleteAllIntegrationAPIUsessionCompletedEventHandler
        
        '''<remarks/>
        Public Event DisplayStatusCompleted As DisplayStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event ReplacePM6StartProjectCompleted As ReplacePM6StartProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAssociateProjectCompleted As GetAssociateProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPM6AssociateProjectCompleted As GetPM6AssociateProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPM6AssociateProjectExceptCurrentProjectCompleted As GetPM6AssociateProjectExceptCurrentProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSigepProjectInfoCompleted As GetSigepProjectInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSigepProjectStatusCompleted As GetSigepProjectStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserPrimaveraPwdCompleted As GetUserPrimaveraPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event ProjStatusListCompleted As ProjStatusListCompletedEventHandler
        
        '''<remarks/>
        Public Event ProjLocationsListCompleted As ProjLocationsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDefaultP6calendarListCompleted As GetDefaultP6calendarListCompletedEventHandler
        
        '''<remarks/>
        Public Event ProjCustomersCompleted As ProjCustomersCompletedEventHandler
        
        '''<remarks/>
        Public Event ProjectsCompleted As ProjectsCompletedEventHandler
        
        '''<remarks/>
        Public Event ProjectSanpshotsCompleted As ProjectSanpshotsCompletedEventHandler
        
        '''<remarks/>
        Public Event CompanyListCompleted As CompanyListCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/UpdateProject", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateProject(ByVal idPM6 As Integer, ByVal source As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateProject", New Object() {idPM6, source})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateProjectAsync(ByVal idPM6 As Integer, ByVal source As String)
            Me.UpdateProjectAsync(idPM6, source, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateProjectAsync(ByVal idPM6 As Integer, ByVal source As String, ByVal userState As Object)
            If (Me.UpdateProjectOperationCompleted Is Nothing) Then
                Me.UpdateProjectOperationCompleted = AddressOf Me.OnUpdateProjectOperationCompleted
            End If
            Me.InvokeAsync("UpdateProject", New Object() {idPM6, source}, Me.UpdateProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateProjectCompleted(Me, New UpdateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/UpdateProjectAssociation", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateProjectAssociation(ByVal idPM6 As Integer, ByVal sigepID As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateProjectAssociation", New Object() {idPM6, sigepID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateProjectAssociationAsync(ByVal idPM6 As Integer, ByVal sigepID As String)
            Me.UpdateProjectAssociationAsync(idPM6, sigepID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateProjectAssociationAsync(ByVal idPM6 As Integer, ByVal sigepID As String, ByVal userState As Object)
            If (Me.UpdateProjectAssociationOperationCompleted Is Nothing) Then
                Me.UpdateProjectAssociationOperationCompleted = AddressOf Me.OnUpdateProjectAssociationOperationCompleted
            End If
            Me.InvokeAsync("UpdateProjectAssociation", New Object() {idPM6, sigepID}, Me.UpdateProjectAssociationOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateProjectAssociationOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateProjectAssociationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateProjectAssociationCompleted(Me, New UpdateProjectAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/ImportProject", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportProject(ByVal IdSigep As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ImportProject", New Object() {IdSigep})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportProjectAsync(ByVal IdSigep As Integer)
            Me.ImportProjectAsync(IdSigep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportProjectAsync(ByVal IdSigep As Integer, ByVal userState As Object)
            If (Me.ImportProjectOperationCompleted Is Nothing) Then
                Me.ImportProjectOperationCompleted = AddressOf Me.OnImportProjectOperationCompleted
            End If
            Me.InvokeAsync("ImportProject", New Object() {IdSigep}, Me.ImportProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportProjectCompleted(Me, New ImportProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/DeleteAllIntegrationAPIUsession", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteAllIntegrationAPIUsession(ByVal appname As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteAllIntegrationAPIUsession", New Object() {appname})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteAllIntegrationAPIUsessionAsync(ByVal appname As String)
            Me.DeleteAllIntegrationAPIUsessionAsync(appname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAllIntegrationAPIUsessionAsync(ByVal appname As String, ByVal userState As Object)
            If (Me.DeleteAllIntegrationAPIUsessionOperationCompleted Is Nothing) Then
                Me.DeleteAllIntegrationAPIUsessionOperationCompleted = AddressOf Me.OnDeleteAllIntegrationAPIUsessionOperationCompleted
            End If
            Me.InvokeAsync("DeleteAllIntegrationAPIUsession", New Object() {appname}, Me.DeleteAllIntegrationAPIUsessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteAllIntegrationAPIUsessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteAllIntegrationAPIUsessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteAllIntegrationAPIUsessionCompleted(Me, New DeleteAllIntegrationAPIUsessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/DisplayStatus", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DisplayStatus(ByVal idPM6 As Integer) As String
            Dim results() As Object = Me.Invoke("DisplayStatus", New Object() {idPM6})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DisplayStatusAsync(ByVal idPM6 As Integer)
            Me.DisplayStatusAsync(idPM6, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisplayStatusAsync(ByVal idPM6 As Integer, ByVal userState As Object)
            If (Me.DisplayStatusOperationCompleted Is Nothing) Then
                Me.DisplayStatusOperationCompleted = AddressOf Me.OnDisplayStatusOperationCompleted
            End If
            Me.InvokeAsync("DisplayStatus", New Object() {idPM6}, Me.DisplayStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisplayStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisplayStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisplayStatusCompleted(Me, New DisplayStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/ReplacePM6StartProject", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReplacePM6StartProject(ByVal idPM6 As Integer, ByVal user As String) As Boolean
            Dim results() As Object = Me.Invoke("ReplacePM6StartProject", New Object() {idPM6, user})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReplacePM6StartProjectAsync(ByVal idPM6 As Integer, ByVal user As String)
            Me.ReplacePM6StartProjectAsync(idPM6, user, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReplacePM6StartProjectAsync(ByVal idPM6 As Integer, ByVal user As String, ByVal userState As Object)
            If (Me.ReplacePM6StartProjectOperationCompleted Is Nothing) Then
                Me.ReplacePM6StartProjectOperationCompleted = AddressOf Me.OnReplacePM6StartProjectOperationCompleted
            End If
            Me.InvokeAsync("ReplacePM6StartProject", New Object() {idPM6, user}, Me.ReplacePM6StartProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnReplacePM6StartProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReplacePM6StartProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReplacePM6StartProjectCompleted(Me, New ReplacePM6StartProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetAssociateProject", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAssociateProject(ByVal idSigep As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetAssociateProject", New Object() {idSigep})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAssociateProjectAsync(ByVal idSigep As Integer)
            Me.GetAssociateProjectAsync(idSigep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAssociateProjectAsync(ByVal idSigep As Integer, ByVal userState As Object)
            If (Me.GetAssociateProjectOperationCompleted Is Nothing) Then
                Me.GetAssociateProjectOperationCompleted = AddressOf Me.OnGetAssociateProjectOperationCompleted
            End If
            Me.InvokeAsync("GetAssociateProject", New Object() {idSigep}, Me.GetAssociateProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAssociateProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAssociateProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAssociateProjectCompleted(Me, New GetAssociateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetPM6AssociateProject", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPM6AssociateProject(ByVal idPM As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetPM6AssociateProject", New Object() {idPM})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPM6AssociateProjectAsync(ByVal idPM As Integer)
            Me.GetPM6AssociateProjectAsync(idPM, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPM6AssociateProjectAsync(ByVal idPM As Integer, ByVal userState As Object)
            If (Me.GetPM6AssociateProjectOperationCompleted Is Nothing) Then
                Me.GetPM6AssociateProjectOperationCompleted = AddressOf Me.OnGetPM6AssociateProjectOperationCompleted
            End If
            Me.InvokeAsync("GetPM6AssociateProject", New Object() {idPM}, Me.GetPM6AssociateProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPM6AssociateProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPM6AssociateProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPM6AssociateProjectCompleted(Me, New GetPM6AssociateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetPM6AssociateProjectExceptCurrentProject", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPM6AssociateProjectExceptCurrentProject(ByVal idPM As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetPM6AssociateProjectExceptCurrentProject", New Object() {idPM})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPM6AssociateProjectExceptCurrentProjectAsync(ByVal idPM As Integer)
            Me.GetPM6AssociateProjectExceptCurrentProjectAsync(idPM, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPM6AssociateProjectExceptCurrentProjectAsync(ByVal idPM As Integer, ByVal userState As Object)
            If (Me.GetPM6AssociateProjectExceptCurrentProjectOperationCompleted Is Nothing) Then
                Me.GetPM6AssociateProjectExceptCurrentProjectOperationCompleted = AddressOf Me.OnGetPM6AssociateProjectExceptCurrentProjectOperationCompleted
            End If
            Me.InvokeAsync("GetPM6AssociateProjectExceptCurrentProject", New Object() {idPM}, Me.GetPM6AssociateProjectExceptCurrentProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPM6AssociateProjectExceptCurrentProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPM6AssociateProjectExceptCurrentProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPM6AssociateProjectExceptCurrentProjectCompleted(Me, New GetPM6AssociateProjectExceptCurrentProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetSigepProjectInfo", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSigepProjectInfo(ByVal idSigep As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetSigepProjectInfo", New Object() {idSigep})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSigepProjectInfoAsync(ByVal idSigep As Integer)
            Me.GetSigepProjectInfoAsync(idSigep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSigepProjectInfoAsync(ByVal idSigep As Integer, ByVal userState As Object)
            If (Me.GetSigepProjectInfoOperationCompleted Is Nothing) Then
                Me.GetSigepProjectInfoOperationCompleted = AddressOf Me.OnGetSigepProjectInfoOperationCompleted
            End If
            Me.InvokeAsync("GetSigepProjectInfo", New Object() {idSigep}, Me.GetSigepProjectInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSigepProjectInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSigepProjectInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSigepProjectInfoCompleted(Me, New GetSigepProjectInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetSigepProjectStatus", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSigepProjectStatus(ByVal idPM As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetSigepProjectStatus", New Object() {idPM})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSigepProjectStatusAsync(ByVal idPM As Integer)
            Me.GetSigepProjectStatusAsync(idPM, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSigepProjectStatusAsync(ByVal idPM As Integer, ByVal userState As Object)
            If (Me.GetSigepProjectStatusOperationCompleted Is Nothing) Then
                Me.GetSigepProjectStatusOperationCompleted = AddressOf Me.OnGetSigepProjectStatusOperationCompleted
            End If
            Me.InvokeAsync("GetSigepProjectStatus", New Object() {idPM}, Me.GetSigepProjectStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSigepProjectStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSigepProjectStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSigepProjectStatusCompleted(Me, New GetSigepProjectStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetUserPrimaveraPwd", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserPrimaveraPwd(ByVal userId As String) As String
            Dim results() As Object = Me.Invoke("GetUserPrimaveraPwd", New Object() {userId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserPrimaveraPwdAsync(ByVal userId As String)
            Me.GetUserPrimaveraPwdAsync(userId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserPrimaveraPwdAsync(ByVal userId As String, ByVal userState As Object)
            If (Me.GetUserPrimaveraPwdOperationCompleted Is Nothing) Then
                Me.GetUserPrimaveraPwdOperationCompleted = AddressOf Me.OnGetUserPrimaveraPwdOperationCompleted
            End If
            Me.InvokeAsync("GetUserPrimaveraPwd", New Object() {userId}, Me.GetUserPrimaveraPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserPrimaveraPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserPrimaveraPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserPrimaveraPwdCompleted(Me, New GetUserPrimaveraPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/ProjStatusList", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProjStatusList() As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ProjStatusList", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProjStatusListAsync()
            Me.ProjStatusListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProjStatusListAsync(ByVal userState As Object)
            If (Me.ProjStatusListOperationCompleted Is Nothing) Then
                Me.ProjStatusListOperationCompleted = AddressOf Me.OnProjStatusListOperationCompleted
            End If
            Me.InvokeAsync("ProjStatusList", New Object(-1) {}, Me.ProjStatusListOperationCompleted, userState)
        End Sub
        
        Private Sub OnProjStatusListOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProjStatusListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProjStatusListCompleted(Me, New ProjStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/ProjLocationsList", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProjLocationsList(ByVal companyId As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ProjLocationsList", New Object() {companyId})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProjLocationsListAsync(ByVal companyId As Integer)
            Me.ProjLocationsListAsync(companyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProjLocationsListAsync(ByVal companyId As Integer, ByVal userState As Object)
            If (Me.ProjLocationsListOperationCompleted Is Nothing) Then
                Me.ProjLocationsListOperationCompleted = AddressOf Me.OnProjLocationsListOperationCompleted
            End If
            Me.InvokeAsync("ProjLocationsList", New Object() {companyId}, Me.ProjLocationsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnProjLocationsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProjLocationsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProjLocationsListCompleted(Me, New ProjLocationsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/GetDefaultP6calendarList", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDefaultP6calendarList() As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetDefaultP6calendarList", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDefaultP6calendarListAsync()
            Me.GetDefaultP6calendarListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDefaultP6calendarListAsync(ByVal userState As Object)
            If (Me.GetDefaultP6calendarListOperationCompleted Is Nothing) Then
                Me.GetDefaultP6calendarListOperationCompleted = AddressOf Me.OnGetDefaultP6calendarListOperationCompleted
            End If
            Me.InvokeAsync("GetDefaultP6calendarList", New Object(-1) {}, Me.GetDefaultP6calendarListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDefaultP6calendarListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDefaultP6calendarListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDefaultP6calendarListCompleted(Me, New GetDefaultP6calendarListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/ProjCustomers", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProjCustomers(ByVal companyId As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ProjCustomers", New Object() {companyId})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProjCustomersAsync(ByVal companyId As Integer)
            Me.ProjCustomersAsync(companyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProjCustomersAsync(ByVal companyId As Integer, ByVal userState As Object)
            If (Me.ProjCustomersOperationCompleted Is Nothing) Then
                Me.ProjCustomersOperationCompleted = AddressOf Me.OnProjCustomersOperationCompleted
            End If
            Me.InvokeAsync("ProjCustomers", New Object() {companyId}, Me.ProjCustomersOperationCompleted, userState)
        End Sub
        
        Private Sub OnProjCustomersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProjCustomersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProjCustomersCompleted(Me, New ProjCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/Projects", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Projects(ByVal companyId As Integer, ByVal userId As String, ByVal descr As String, ByVal status As Integer, ByVal location As Integer, ByVal cust As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("Projects", New Object() {companyId, userId, descr, status, location, cust})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProjectsAsync(ByVal companyId As Integer, ByVal userId As String, ByVal descr As String, ByVal status As Integer, ByVal location As Integer, ByVal cust As String)
            Me.ProjectsAsync(companyId, userId, descr, status, location, cust, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProjectsAsync(ByVal companyId As Integer, ByVal userId As String, ByVal descr As String, ByVal status As Integer, ByVal location As Integer, ByVal cust As String, ByVal userState As Object)
            If (Me.ProjectsOperationCompleted Is Nothing) Then
                Me.ProjectsOperationCompleted = AddressOf Me.OnProjectsOperationCompleted
            End If
            Me.InvokeAsync("Projects", New Object() {companyId, userId, descr, status, location, cust}, Me.ProjectsOperationCompleted, userState)
        End Sub
        
        Private Sub OnProjectsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProjectsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProjectsCompleted(Me, New ProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/ProjectSanpshots", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProjectSanpshots(ByVal projectID As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ProjectSanpshots", New Object() {projectID})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProjectSanpshotsAsync(ByVal projectID As Integer)
            Me.ProjectSanpshotsAsync(projectID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProjectSanpshotsAsync(ByVal projectID As Integer, ByVal userState As Object)
            If (Me.ProjectSanpshotsOperationCompleted Is Nothing) Then
                Me.ProjectSanpshotsOperationCompleted = AddressOf Me.OnProjectSanpshotsOperationCompleted
            End If
            Me.InvokeAsync("ProjectSanpshots", New Object() {projectID}, Me.ProjectSanpshotsOperationCompleted, userState)
        End Sub
        
        Private Sub OnProjectSanpshotsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProjectSanpshotsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProjectSanpshotsCompleted(Me, New ProjectSanpshotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://projectobjects.com/CompanyList", RequestNamespace:="http://projectobjects.com/", ResponseNamespace:="http://projectobjects.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CompanyList(ByVal userId As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("CompanyList", New Object() {userId})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CompanyListAsync(ByVal userId As String)
            Me.CompanyListAsync(userId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CompanyListAsync(ByVal userId As String, ByVal userState As Object)
            If (Me.CompanyListOperationCompleted Is Nothing) Then
                Me.CompanyListOperationCompleted = AddressOf Me.OnCompanyListOperationCompleted
            End If
            Me.InvokeAsync("CompanyList", New Object() {userId}, Me.CompanyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCompanyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CompanyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CompanyListCompleted(Me, New CompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub UpdateProjectCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub UpdateProjectAssociationCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateProjectAssociationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateProjectAssociationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ImportProjectCompletedEventHandler(ByVal sender As Object, ByVal e As ImportProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub DeleteAllIntegrationAPIUsessionCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteAllIntegrationAPIUsessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteAllIntegrationAPIUsessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub DisplayStatusCompletedEventHandler(ByVal sender As Object, ByVal e As DisplayStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DisplayStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ReplacePM6StartProjectCompletedEventHandler(ByVal sender As Object, ByVal e As ReplacePM6StartProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReplacePM6StartProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetAssociateProjectCompletedEventHandler(ByVal sender As Object, ByVal e As GetAssociateProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAssociateProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetPM6AssociateProjectCompletedEventHandler(ByVal sender As Object, ByVal e As GetPM6AssociateProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPM6AssociateProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetPM6AssociateProjectExceptCurrentProjectCompletedEventHandler(ByVal sender As Object, ByVal e As GetPM6AssociateProjectExceptCurrentProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPM6AssociateProjectExceptCurrentProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetSigepProjectInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetSigepProjectInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSigepProjectInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetSigepProjectStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetSigepProjectStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSigepProjectStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetUserPrimaveraPwdCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserPrimaveraPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserPrimaveraPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ProjStatusListCompletedEventHandler(ByVal sender As Object, ByVal e As ProjStatusListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProjStatusListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ProjLocationsListCompletedEventHandler(ByVal sender As Object, ByVal e As ProjLocationsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProjLocationsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetDefaultP6calendarListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDefaultP6calendarListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDefaultP6calendarListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ProjCustomersCompletedEventHandler(ByVal sender As Object, ByVal e As ProjCustomersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProjCustomersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ProjectsCompletedEventHandler(ByVal sender As Object, ByVal e As ProjectsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProjectsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ProjectSanpshotsCompletedEventHandler(ByVal sender As Object, ByVal e As ProjectSanpshotsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProjectSanpshotsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub CompanyListCompletedEventHandler(ByVal sender As Object, ByVal e As CompanyListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CompanyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
