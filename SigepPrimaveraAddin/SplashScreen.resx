<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAlgCWAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCABGAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKAOYHjywaXyY
        7C6d920BQCSfzqS88aW+nyLDeaXdxOyhwp25wfxqxYWlhp87zLp8cKmFZXuW6EnqPb/69ZWp6XH4s1QS
        2c4SC2Ty3lwTvOSfl7HFVTjGVm27W8v8iJuUbpbk3/CwtM/58rn/AMd/xo/4WFpn/Plc/wDjv+NV7v4e
        xNHmyvnDjtIMg/l0rBbwhri3T2yWhYKf9ZnCH6E1vGlRltJ/h/kZSnVj0RH8Qf2jPA/wzsbTUfE9nqgh
        vJTDF9mhWQ7gM8jcMDArhv8AhvH4Kf8APp4j/wDAFP8A45XlH7ZlnPD4f0CxlCrKNTZDg5AJjPpXr9r+
        zt8BbTRrL4Z3/hK3OpXWitenVnGJy6lUZxJnIbc4IXpjtXpU8Ng6VGM6yk229rbKx508RjKlaUKTikkt
        +7K//DePwU/59PEf/gCn/wAco/4bx+Cn/Pp4j/8AAFP/AI5XhHiD4Of2j8EfCC+HPhjZQ63rGqwafFri
        X4aW8ZmmXDR4+QHbknsErlfFv7Ivxg8F6Dq/ibWLbSv7O0WFrieWK83F0CgkouAT1xzjkV6EMvy2WkpN
        O7WslrbQ4Z47MYq6SatfZ+p9Q/8ADePwU/59PEf/AIAp/wDHKP8AhvH4Kf8APp4j/wDAFP8A45XyvqH7
        Jnxm03wIfH1zo1r9lS2+2SWa3GbuOHG7cY8Y4HJGcj0q34a/Y9+MnirSNI17TLbSRYa1apeQSyXuNkbJ
        vXeApIJBAwM8n8ap5dlSXM56bfESsfmbfLya77H1RpX7bPwo12+TTdG0XxVe3UgJSGHT1Z2AGTgCT0rf
        /wCGm/Dv/RPPHf8A4KB/8XXxT8CtC1Hw38c18Pazb+Rfab9striMnOyRFYHnvyOte3eOfEHxns/EF3b+
        BvC9he6XbQxsJbj5XdyMsq/ON2PpXwHEuaSyrN45Zg4U7Omp81SfItZNWvt2sfU5NQljsA8ZiJSupuNo
        Q5nok9tz0Ob9ub4N208trc2HiWGaFzHIj2CBlYHBBG/1or4B1i6vbzWL+71KDybua5lknj2ldkhYlhg8
        jBzRX6JSyLCyhGUk7tK9np8j5GedYlSaja3ofrjqlvDd6L9kmZU82NVVm6BsZGfxrMg8UJpMy6ZrFpHb
        7IwVaA70x9O3Sn6lrGlz2I04lrkyDyZEgG6RGC5BA79K4fULG8tJylxHLwgcb+WVCcDPpXymGpKcEpH1
        FabjK8Tubnx3o0QIhEsx7YXA/WsnVvHZuLZrfTrZ4mdcGRyMr9Md65HkHmt3w1pum3kV5c6kkjrCq4VM
        5Gc/NgcnGK6HRp01zMxVWdR2R8zftjQzJ4O8O3gJw2qyIp7lhET/AFr1fSbLTf2mvhVB4W8feH9T8N+M
        NMsw0L3NvJBIHChRcwlgN8TELuXoCcf3TXnX7bymy8B+EbEIRJHqMsz7h90tGSAffAFeo+Hvj98DL3TN
        J+Keo+O7Wz1Kw0J9Om0p5B54ZjG7qIvvM26MAEcEGvS9+WEpzpxd1KVmum1vvPN9yOKqRqSVmldPr3+4
        Ph/YTWHwk+DWm3ijzrXxAkMg6/OkV6D+orb+IDSXHgX4vQXDM8S3SxoG5AU2VqSB7ZJ/OvL9O+Mfh/xD
        4A+G2jeCtc0u58XJ4nivDpVxO0W0O1yWR3CkLkSBcjPLCvTfi5rOo2HwU+ImreIvDNtoE5jIQJdrMLxj
        HEqPuAXkthMYz8lYVKdSNdOSs3L/ANv7G1OpCVF8rulH/wBtOp8XeIfBvhzxNcRa3rNyt1faILcafFaS
        zqIBJJ+9IRWxksV5/u1zvgKZ4/C/wWihkZYpLDDKDgMBpjkZFcvqH7RfwU/su6+Ldv4zgk1afw8NOTRh
        kXIlDtIF29Qd74J6YGc1u+GPEvgrwx8M/hL4l8beI4dGjg02E20k/EUkj2DKUZv4flLEepGO9YuhOnTt
        KLu9NuvK9lboaqtCdS6krb/K63dz5L8WeI7zwb+1N4w1jS/DtxrM0WpXqraQZ3ncOWGFY8Zz0r0z4YfE
        zxJ458cavY6xol1ottbadDJFY3A+dX3sC+SqnDAgY6fLXmPhvx1ourftS6p4qt7sHTta1O8S2nf5Qyyb
        hGeem7Ax9a97tPDF5bfEfUvF7mEWl3pVvZphvn3pI7NkdMYK818B4kVsFRxEqGKw69q8PHkqNu91Ne6o
        /Dda67nv8IQxNWmqtCq+RVXzQSVrOO7e/bTY+S/jNax23xR8RxwqFU3m/AGOWRWP6k0VB8WtVtdY+JPi
        DULGUSwPeFEdeQ21QpI9sqaK/ZcijOGVYaNT4lThe+9+VXPznNHGWOrOG3PK3/gTP1MsPD1vp4iaNYWl
        h3ESlPmJbr3p95oiXofzGjzK6NIdpywU5A68CtSivg1G3V/ez7u/kYM3hHT5WL7UDENzt7lt2f6VfstK
        hscm3SMMd3O3nBYnH0yav0VTu9G394kktkeUfHf4C2Xxy0rTNLvtfk0oabcvch4bcSGQsu3ByRXjP/Dv
        LQf+ik3/AP4Ap/8AFV9e0V24fMMThYezpTsvkcdfAYfET9pUjd/M+Rbf/gnzpFrPHc2vxP1OGaFg8ciW
        aqyMDkEENwQa6bxP+yJ4n8aafFpXiv4++JtUs4CGSC5hVk3DoSN3J9zX0pRWjzXFyak56ryX+RCyzCxT
        Sjo/N/5nyF/w7x0D/opN/wD+AKf/ABVauo/sPXWsaXaaHq3xr8Q3mnWAUWtpPF5kMGF2jYhfC4XjjtX1
        RRTeb4x6uf4L/IlZVhFoofi/8z5CX/gnnoSkMvxK1AEHIIsU4P8A31XTy/sg+JJtNOkS/HvxI1oyeWYz
        AvK+hO7OPxr6WorDEY2ri3F17S5dVeMXb0utDWlgaNBNUk433s2r+tmfIq/8E9tAH/NSNQOTn/jxT/4q
        ivrqit/7Xxv8/wCC/wAjL+ycH/J+L/zCiiivNPRCiiigAooooAKKKKACiiigAooooAKKKKAP/9k=
</value>
  </data>
</root>